==========COMMON FOR MASTER & SLAVES START ====

sudo apt-get update -y
sudo apt-get install -y apt-transport-https
sudo su -

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt-get update -y


apt-get install -y docker
usermod -aG docker ubuntu


apt-get nstall policykit-1 //Required if we are not able to restart service
systemctl restart docker
systemctl enable docker.service


apt-get install -y kubelet kubeadm kubectl kubernetes-cni

dpkg -i --force-overwrite /var/cache/apt/archives/kubernetes-cni_0.7.5-00_amd64.deb

apt-get install -y kubelet kubeadm kubectl kubernetes-cni

sudo sysctl net.bridge.bridge-nf-call-iptables=1


Add Below envrionment 
======================
vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
Environment="cgroup-driver=systemd/cgroup-driver=cgroupfs"

==========COMMON FOR MASTER & SLAVES END=====

==============================================================
In Master Node
==============================================================
kubeadm init

  #exit root user & exeucte as normal user
  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo unlink $HOME/.kube/config
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

Get token
=========================================
kubeadm token create --print-join-command

================
Set up Dashboard
================
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml

# Service Account & Cluster Role Binding
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-admin
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: eks-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: k8s-admin
  namespace: kube-system
  

 
Enable dashboard access from out side network
===============================================
nohup kubectl proxy --address 0.0.0.0 --accept-hosts ".*" & 
 
kubectl -n kube-system {(get)or(edit)} service kubernetes-dashboard 
 
Edit Service Update type from clusterIp to NodePort
==================================================== 
kubectl -n kube-system edit service kubernetes-dashboard 
 
Get Bearer token
===================  
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep k8s-admin | awk '{print $1}')  



